name: Zap Task API CICD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install poetry
        run: |
          pip install poetry

      - name: Cache poetry cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pypoetry
            .venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install dependencies
        run: poetry install --with dev --no-root

      - name: Run flake8
        run: poetry run flake8 .

      - name: Run black
        run: poetry run black . --check

      - name: Run isort
        run: poetry run isort . --check-only


  test:
    needs: lint
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Run tests
      run: docker compose -f compose.test.yml --env-file=.env.test up --build --abort-on-container-exit


  deploy:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Copy project over SSH
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_SECRET_KEY }}
          source: "."
          target: "/home/${{ secrets.SSH_USER }}/zap-task"
      
      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_SECRET_KEY }}
          script: |
            cd /home/${{ secrets.SSH_USER }}/zap-task
            echo '${{ secrets.ENV_FILE }}' > .env
            docker compose down
            docker compose up -d --build
